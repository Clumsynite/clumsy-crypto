{"version":3,"sources":["Components/Today.js","Components/History.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Today","props","currency","symbol","useState","btc","setBtc","eth","setEth","ltc","setLtc","crypto","shortname","name","value","useEffect","a","axios","get","response","status","data","BTC","ETH","LTC","console","error","fetchPrice","cell","map","coin","index","className","length","title","role","style","color","String","fromCharCode","History","rates","setRates","getCryptoRates","date","array","day","moment","subtract","unix","btcRate","ethRate","ltcRate","object","get5dayRates","Cells","coins","coinRates","cells","rows","rate","format","App","setCurrency","setSymbol","symbols","USD","INR","backgroundColor","cursor","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onChange","e","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.612de362.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Today = (props) => {\r\n  const { currency, symbol } = props;\r\n  const [btc, setBtc] = useState(\"\");\r\n  const [eth, setEth] = useState(\"\");\r\n  const [ltc, setLtc] = useState(\"\");\r\n\r\n  const crypto = [\r\n    { shortname: \"BTC\", name: \"Bitcoin\", value: btc },\r\n    { shortname: \"ETH\", name: \"Ethereum\", value: eth },\r\n    { shortname: \"LTC\", name: \"Litecoin \", value: ltc },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchPrice = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=${currency}`\r\n        );\r\n        if (response.status === 200) {\r\n          setBtc(response.data.BTC[currency]);\r\n          setEth(response.data.ETH[currency]);\r\n          setLtc(response.data.LTC[currency]);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchPrice();\r\n\r\n    return () => {\r\n      setBtc(\"\");\r\n      setEth(\"\");\r\n      setLtc(\"\");\r\n    };\r\n  }, [currency]);\r\n\r\n  const cell = crypto.map((coin, index) => {\r\n    return (\r\n      <div\r\n        className={`col d-flex flex-column align-items-center p-4 ${\r\n          index !== crypto.length - 1 ? \"border-end\" : \"\"\r\n        }`}\r\n        key={index}\r\n        title={coin.name}\r\n      >\r\n        {coin.value === \"\" && (\r\n          <div\r\n            className=\"spinner-border\"\r\n            role=\"status\"\r\n            style={{ color: \"#e3f2fd\" }}\r\n          >\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        )}\r\n        {coin.value !== \"\" && (\r\n          <div className=\"fs-4\">\r\n            {String.fromCharCode(symbol)}\r\n            {coin.value}\r\n          </div>\r\n        )}\r\n        <div className=\"fs-6 fw-lighter\">1 {coin.shortname}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"fs-5 font-lighter\">Current Price</div>\r\n      <div className=\"row bg-light text-dark shadow mb-4 border\">{cell}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst History = (props) => {\r\n  const { currency, symbol } = props;\r\n  const [rates, setRates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCryptoRates = async (coin, date) => {\r\n      try {\r\n        return await axios.get(\r\n          `https://min-api.cryptocompare.com/data/pricehistorical?fsym=${coin}&tsyms=${currency}&ts=${date}`\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const get5dayRates = async () => {\r\n      let array = [];\r\n      for (let day = 1; day < 6; day++) {\r\n        const date = moment().subtract(day, \"days\").unix();\r\n        const btcRate = await getCryptoRates(\"BTC\", date);\r\n        const ethRate = await getCryptoRates(\"ETH\", date);\r\n        const ltcRate = await getCryptoRates(\"LTC\", date);\r\n        let object = {\r\n          BTC: btcRate.data.BTC[currency],\r\n          ETH: ethRate.data.ETH[currency],\r\n          LTC: ltcRate.data.LTC[currency],\r\n          date: date,\r\n        };\r\n        array[day - 1] = object;\r\n      }\r\n      setRates(array);\r\n    };\r\n    get5dayRates();\r\n    return () => {\r\n      setRates([]);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currency]);\r\n\r\n  const Cells = (props) => {\r\n    const { coins } = props;\r\n    const coinRates = [\r\n      { shortname: \"BTC\", name: \"Bitcoin\", value: coins.BTC },\r\n      { shortname: \"ETH\", name: \"Ethereum\", value: coins.ETH },\r\n      { shortname: \"LTC\", name: \"Litecoin\", value: coins.LTC },\r\n    ];\r\n    const cells = coinRates.map((coin, index) => {\r\n      return (\r\n        <div\r\n          className={`col d-flex justify-content-center ${\r\n            index !== coinRates.length - 1 ? \"border-end\" : \"\"\r\n          }`}\r\n          key={index}\r\n          title={coin.name}\r\n        >\r\n          {coin.value === \"\" && (\r\n            <div\r\n              className=\"spinner-border\"\r\n              role=\"status\"\r\n              style={{ color: \"#e3f2fd\" }}\r\n            >\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          )}\r\n          {coin.value !== \"\" && (\r\n            <div className=\"text-center\">\r\n              1 {coin.shortname} = {String.fromCharCode(symbol)}\r\n              {coin.value}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n    return <div className=\"row fs-6\">{cells}</div>;\r\n  };\r\n\r\n  const rows = rates.map((rate, index) => {\r\n    return (\r\n      <div\r\n        className={`d-flex flex-column bg-light text-dark p-3 ${\r\n          index !== rates.length ? \"border-bottom\" : \"\"\r\n        }`}\r\n        key={index}\r\n      >\r\n        <div className=\"text-info p-3\">\r\n          {moment.unix(rate.date).format(\"MMMM Do YYYY\")}\r\n        </div>\r\n        <>\r\n          <Cells coins={rate} />\r\n        </>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"fs-5 font-lighter\">History (Past 5 days)</div>\r\n      {rates.length <= 0 && (\r\n        <div className=\"spinner-border text-info\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      )}\r\n      {rates.length > 0 && (\r\n        <div className=\"d-flex flex-column border shadow\">{rows}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useState } from \"react\";\nimport Today from \"./Components/Today\";\nimport History from \"./Components/History\";\n\nconst App = () => {\n  const [currency, setCurrency] = useState(\"USD\");\n  const [symbol, setSymbol] = useState(36);\n  const symbols = { USD: 36, INR: 8377 };\n  return (\n    <div className=\"App pb-5\">\n      <nav\n        className=\"navbar navbar-light shadow-sm mb-3 navbar-expand-sm sticky-top\"\n        style={{ backgroundColor: \"#e3f2fd\" }}\n      >\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand\" style={{ cursor: \"pointer\" }}>\n            Clumsy Crypto\n          </span>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item d-flex align-items-center\">\n                <div className=\"me-2\">Currency:</div>\n                <select\n                  className=\"form-select\"\n                  value={currency}\n                  onChange={(e) => {\n                    setCurrency(e.target.value);\n                    setSymbol(symbols[e.target.value]);\n                  }}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <option value=\"USD\" title=\"United States Dollars\">\n                    USD\n                  </option>\n                  <option value=\"INR\" title=\"Indian Rupees\">\n                    INR\n                  </option>\n                </select>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container px-4\">\n        <div id=\"Description\" className=\"fs-3 fw-lighter text-center p-4\">\n          Clumsy Crypto is a Progressive Web App which displays realtime price\n          information about BTC, ETH and LTC.\n        </div>\n        <Today currency={currency} symbol={symbol} />\n        <History currency={currency} symbol={symbol} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}